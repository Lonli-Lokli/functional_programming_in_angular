{
  "version": 1,
  "cli": {
    "defaultCollection": "@nrwl/angular"
  },
  "defaultProject": "weather",
  "schematics": {
    "@nrwl/angular": {
      "application": {
        "linter": "eslint"
      },
      "library": {
        "linter": "eslint"
      },
      "storybook-configuration": {
        "linter": "eslint"
      }
    },
    "@nrwl/angular:application": {
      "style": "scss",
      "linter": "eslint",
      "unitTestRunner": "jest",
      "e2eTestRunner": "cypress"
    },
    "@nrwl/angular:library": {
      "style": "scss",
      "linter": "eslint",
      "unitTestRunner": "jest",
      "strict": true
    },
    "@nrwl/angular:component": {
      "style": "scss"
    }
  },
  "projects": {
    "weather": {
      "projectType": "application",
      "root": "apps/weather",
      "sourceRoot": "apps/weather/src",
      "prefix": "fp",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist/apps/weather",
            "index": "apps/weather/src/index.html",
            "main": "apps/weather/src/main.ts",
            "polyfills": "apps/weather/src/polyfills.ts",
            "tsConfig": "apps/weather/tsconfig.app.json",
            "aot": true,
            "assets": ["apps/weather/src/favicon.ico", "apps/weather/src/assets"],
            "styles": ["apps/weather/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "fileReplacements": [
                {
                  "replace": "apps/weather/src/environments/environment.ts",
                  "with": "apps/weather/src/environments/environment.prod.ts"
                }
              ],
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "namedChunks": false,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "6kb",
                  "maximumError": "10kb"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "browserTarget": "weather:build"
          },
          "configurations": {
            "production": {
              "browserTarget": "weather:build:production"
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "weather:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/weather/src/**/*.ts", "apps/weather/src/**/*.html"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/weather"],
          "options": {
            "jestConfig": "apps/weather/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "city-weather": {
      "projectType": "library",
      "root": "libs/city-weather",
      "sourceRoot": "libs/city-weather/src",
      "prefix": "fp",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/city-weather/src/**/*.ts", "libs/city-weather/src/**/*.html"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/city-weather"],
          "options": {
            "jestConfig": "libs/city-weather/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "utils": {
      "projectType": "library",
      "root": "libs/utils",
      "sourceRoot": "libs/utils/src",
      "prefix": "fp",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/utils/src/**/*.ts", "libs/utils/src/**/*.html"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/utils"],
          "options": {
            "jestConfig": "libs/utils/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "api-weather": {
      "projectType": "library",
      "root": "libs/api-weather",
      "sourceRoot": "libs/api-weather/src",
      "prefix": "fp",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/api-weather/src/**/*.ts", "libs/api-weather/src/**/*.html"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/api-weather"],
          "options": {
            "jestConfig": "libs/api-weather/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    },
    "typings": {
      "projectType": "library",
      "root": "libs/typings",
      "sourceRoot": "libs/typings/src",
      "prefix": "fp",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/typings/src/**/*.ts", "libs/typings/src/**/*.html"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/typings"],
          "options": {
            "jestConfig": "libs/typings/jest.config.js",
            "passWithNoTests": true
          }
        }
      }
    }
  }
}
